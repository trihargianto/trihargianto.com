---
import { type CollectionEntry, getCollection } from "astro:content";
import { upperFirst, lowerCase } from "lodash-es";

import BaseLayout from "./BaseLayout.astro";
import BlogHeroSection from "../components/BlogHeroSection.astro";
import BlogContainer from "../components/BlogContainer";

type Props = {
  posts?: CollectionEntry<"blog">[];
};

const allAvailablePosts = await getCollection("blog");

const sourcePosts = Astro.props.posts ? Astro.props.posts : allAvailablePosts;

// Sort posts by date (newest first)
const sortedPosts = sourcePosts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Get featured post or latest post
const featuredPost =
  sortedPosts.find((post) => post.data.featuredPost) || sortedPosts[0];

// Get all posts except the featured one for the grid/list
const otherPosts = sortedPosts.filter((post) => post.id !== featuredPost?.id);

// Read content for all posts (needed for reading time calculation)
const postContents = new Map<string, string>();
const featuredImages = new Map<string, string>();

for (const post of sortedPosts) {
  postContents.set(post.id, post.body);

  // Serialize featured image src if it exists
  if (post.data.featured) {
    featuredImages.set(post.id, post.data.featured.src);
  }
}

// Get featured post content
const featuredContent = featuredPost ? postContents.get(featuredPost.id) || "" : "";

const currentSelectedTopic = Astro.params?.topic || "all";
---

<BaseLayout
  pageTitle={`${upperFirst(lowerCase(currentSelectedTopic))} Articles | Blog | Tri Hargianto`}
  pageDescription="A collection of articles about web development, programming, and other related topics. Explore insights on frontend engineering, performance optimization, developer experience, and more."
>
  <div class="max-w-7xl mx-auto">
    <!-- Page Header -->
    <div class="mb-8">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        Blog
      </h1>
      <p class="text-lg text-gray-600 dark:text-gray-400 max-w-3xl">
        Thoughts, ideas, and insights on web development, programming, and
        everything in between.
      </p>
    </div>

    <!-- Hero Section - Featured Post -->
    {
      featuredPost && (
        <BlogHeroSection post={featuredPost} content={featuredContent} />
      )
    }

    <!-- Blog Container with Search, Filter, and Posts -->
    <BlogContainer
      posts={otherPosts}
      postContents={postContents}
      featuredImages={featuredImages}
      client:load
    />
  </div>
</BaseLayout>

<style>
  /* Enhanced typography */
  h1 {
    line-height: 1.2;
    letter-spacing: -0.02em;
  }

  /* Smooth transitions */
  * {
    transition-property: color, background-color, border-color;
    transition-duration: 200ms;
    transition-timing-function: ease-out;
  }

  /* Respect reduced motion */
  @media (prefers-reduced-motion: reduce) {
    * {
      transition: none !important;
      animation: none !important;
    }
  }
</style>
